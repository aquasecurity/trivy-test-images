name: Push and Copy Images

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  TEST_IMAGE: 'ghcr.io/${{ github.repository_owner }}/trivy-test-images' # used in Makefile
  GH_USER: "aqua-bot"

jobs:
  push_images:
    runs-on: ubuntu-latest
    name: Push images to GHCR
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch complete history to accurately detect changed files

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GH_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v4

      - name: Detect changed files
        id: changed-files
        run: |
          # Detect changes from previous commit
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # For push events, get diff between before and after commits
            echo "Detecting changes between ${{ github.event.before }} and ${{ github.event.after }}"
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} || git diff --name-only HEAD~1 HEAD)
          else
            # For workflow_dispatch events, get diff between latest commit and its parent
            echo "Detecting changes in the latest commit"
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          fi
          
          # Initialize all flags to false
          echo "busybox_changed=false" >> $GITHUB_OUTPUT
          echo "containerd_changed=false" >> $GITHUB_OUTPUT
          echo "spring4shell_changed=false" >> $GITHUB_OUTPUT
          echo "crane_images_changed=false" >> $GITHUB_OUTPUT
          
          # Set flags to true only if changes are detected with exact path matching
          echo "$CHANGED_FILES" | grep -q "^busybox-with-lockfile/" && echo "busybox_changed=true" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" | grep -q "^containerd/" && echo "containerd_changed=true" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" | grep -q "^spring4shell/" && echo "spring4shell_changed=true" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" | grep -q "^copy-images.sh$" && echo "crane_images_changed=true" >> $GITHUB_OUTPUT
          
          echo "Changed files:"
          echo "$CHANGED_FILES"

      - name: Push `busybox-with-lockfile` image
        if: steps.changed-files.outputs.busybox_changed == 'true'
        run: make build-busybox

      - name: Push `containerd` image
        if: steps.changed-files.outputs.containerd_changed == 'true'
        run: make build-containerd

      - name: Push `spring4shell` image
        if: steps.changed-files.outputs.spring4shell_changed == 'true'
        run: make build-spring4shell

      - name: Copy images
        if: steps.changed-files.outputs.crane_images_changed == 'true'
        run: make copy-images

  copy_to_ecr:
    runs-on: ubuntu-latest
    name: Copy images from GHCR to ECR Public
    needs: push_images
    env:
      ECR_REPO: 'public.ecr.aws/${{ github.repository_owner }}/trivy-test-images'
    steps:
      - name: Install crane
        run: |
          curl -LO https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_Linux_x86_64.tar.gz
          tar xzvf go-containerregistry_Linux_x86_64.tar.gz crane
          sudo mv crane /usr/local/bin/

      - name: Login to ECR Public
        uses: docker/login-action@v3
        with:
          registry: public.ecr.aws
          username: ${{ secrets.ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.ECR_SECRET_ACCESS_KEY }}

      - name: Copy images to ECR Public
        env:
          GHCR_REPO: ${{ env.TEST_IMAGE }}
        run: |
          # Get list of tags from GHCR
          TAGS=$(crane ls $GHCR_REPO)

          for TAG in $TAGS; do
            echo "Copying tag $TAG from GHCR to ECR Public"
            crane copy $GHCR_REPO:$TAG $ECR_REPO:$TAG
          done